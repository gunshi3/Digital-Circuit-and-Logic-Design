/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("A")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("A[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("B")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("Cf")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("M")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("S")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("S[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "S";
}

SIGNAL("S[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "S";
}

SIGNAL("S[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "S";
}

SIGNAL("S[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "S";
}

SIGNAL("T")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T";
}

SIGNAL("T[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T";
}

SIGNAL("T[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T";
}

SIGNAL("T[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T";
}

SIGNAL("T[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T";
}

SIGNAL("T[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T";
}

SIGNAL("T[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T";
}

SIGNAL("T[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T";
}

SIGNAL("Zf")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("A[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("A[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 610.0;
		LEVEL 1 FOR 390.0;
	}
}

TRANSITION_LIST("A[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 290.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 70.0;
	}
}

TRANSITION_LIST("A[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 70.0;
	}
}

TRANSITION_LIST("A[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 70.0;
	}
}

TRANSITION_LIST("A[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("A[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("A[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
	}
}

TRANSITION_LIST("B[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("B[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("B[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("B[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("B[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
		}
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("B[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("B[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 16;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("B[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 33;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("Cf")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("M")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 45;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 11.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("S[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 49.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 56.0;
			LEVEL 0 FOR 56.0;
		}
		LEVEL 1 FOR 55.0;
	}
}

TRANSITION_LIST("S[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21.0;
		NODE
		{
			REPEAT = 17;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
		}
		LEVEL 1 FOR 27.0;
	}
}

TRANSITION_LIST("S[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7.0;
		NODE
		{
			REPEAT = 35;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
		}
		LEVEL 1 FOR 13.0;
	}
}

TRANSITION_LIST("S[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 71;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
		}
		LEVEL 1 FOR 6.0;
	}
}

TRANSITION_LIST("T[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 33.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 108.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 106.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 105.0;
			LEVEL 1 FOR 7.0;
		}
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 106.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 108.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 26.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 43.0;
	}
}

TRANSITION_LIST("T[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 33.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 108.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 106.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 77.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 23.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 77.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 13.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 77.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 17.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("T[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 33.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 108.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 106.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 27.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 77.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 63.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 33.0;
		LEVEL 1 FOR 11.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 34.0;
	}
}

TRANSITION_LIST("T[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 33.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 13.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 71.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 63.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 37.0;
		LEVEL 1 FOR 26.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 22.0;
		LEVEL 1 FOR 42.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 26.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 83.0;
		LEVEL 0 FOR 29.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("T[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 33.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 13.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 13.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 43.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 27.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 51.0;
		LEVEL 0 FOR 26.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 27.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 19.0;
		LEVEL 1 FOR 58.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 53.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 31.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 29.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("T[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 23.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 13.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 13.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 23.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 27.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 29.0;
		LEVEL 1 FOR 34.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 11.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 26.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 26.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 33.0;
		LEVEL 0 FOR 43.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 29.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("T[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 13.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 11.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 17.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 19.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 23.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 17.0;
		LEVEL 0 FOR 23.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("T[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 17.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 13.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 7.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 14.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("Zf")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "A";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "A[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "B[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "B[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "B[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "B[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "B[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "B[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "B[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "B[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Cf";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "M";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "S";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24;
}

DISPLAY_LINE
{
	CHANNEL = "S[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "S[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "S[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "S[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "T";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
	CHILDREN = 26, 27, 28, 29, 30, 31, 32, 33;
}

DISPLAY_LINE
{
	CHANNEL = "T[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "T[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "T[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "T[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "T[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "T[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "T[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "T[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Zf";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 50000;
	MASTER = TRUE;
}
;
